# import Link, LinkSubscriptionPayload, Vote, LinkOrderByInput from "./generated/schema.graphql"
type AuthPayload {
    token: String
    user: User
}

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
}

type Query{
    info: String!
    ###Pagination.  Limit-Offset--offset(start index), limit(count)
    ###             Cursor-based. a unique ID specifed as the cursor. and limit
    ### for Prisma. skip is the the start index, and first is the limit, means
    ### that the first x element are fetched.
    feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!
}

type Feed {
    links: [Link!]!
    count: Int!
}

type Mutation {
    post(url: String!, description: String!) : Link!
    signup(name: String!, email: String!, password: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(linkId: ID!): Vote
}

type Subscription {
    newLink: LinkSubscriptionPayload
}